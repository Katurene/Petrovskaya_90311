@page "/apidemo"
@inject IHttpClientFactory clientFactory
@using Petrovskaya_90311.Blazor.Data
@using Petrovskaya_90311.Blazor.Components
@using System.Text.Json

<h3>Список объектов</h3>
<div class="container">
    <AnimalsList @bind-Animals="animals" SelectedObjectChanged="ShowDetails"></AnimalsList>
    <AnimalDetails @bind-Animal="SelectedAnimal"></AnimalDetails>
</div>

@code {
    [Parameter]
    public IEnumerable<AnimalListViewModel> animals { get; set; }
    string apiBaseAddress = "https://localhost:44383/Api/NewApi";

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, apiBaseAddress);
        var client = clientFactory.CreateClient();
        var response = await client.SendAsync(request);//client.GetAsync(apiBaseAddress);
        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            animals = await JsonSerializer.DeserializeAsync<IEnumerable<AnimalListViewModel>>
            (responseStream,
            new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
    }

    [Parameter]
    public AnimalDetailsViewModel SelectedAnimal{ get; set; }
    private async Task ShowDetails(int id)
    {
        var client = clientFactory.CreateClient();
        var response = await client.GetAsync(apiBaseAddress + $"/{id}");
        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            SelectedAnimal = await
            JsonSerializer.DeserializeAsync<AnimalDetailsViewModel>(responseStream);
        }
    }
}
